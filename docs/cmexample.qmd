---
title: Illustration of Cross-MANOVA with Examples
author: Carsten Allefeld
date: 2023-3-16
number-sections: true
secnumdepth: 1
reference-section-title: References
jupyter: matlab
---

```{matlab}
%| echo: false
clear all
format short
```


# Perfect pattern stability

## Define the true situation

Create an indicator-style design matrix for a design with four conditions and a constant regressor.

```{matlab}
X = repmat([eye(4) ones(4, 1)], 3, 1)
[n, q] = size(X)
```

Create patterns across two variables for the difference between conditions 1 & 2 and 3 & 4. They are identical, i.e. there is perfect pattern stability.

```{matlab}
b21 = [0 1];
b43 = [0 1];
```

Create parameters for the five regressors across two variables.

```{matlab}
b1 = [1, 2];
b2 = b1 + b21;
b3 = [3, 4];
b4 = b3 + b43;
b5 = [5, 6];
B = [b1; b2; b3; b4; b5]
[q, p] = size(B)
```

Define error covariance matrix as identity matrix.

```{matlab}
Sigma = eye(p)
```

Define contrasts for the difference between conditions 1 & 2 and 3 & 4, used as 'training' (A) and 'validation' contrasts (B).

```{matlab}
CA = [-1 1 0 0 0]'
CB = [0 0 -1 1 0]'
```

## Compute true pattern stability

Parameter-effect matrix B:

```{matlab}
DeltaB = CB * pinv(CB) * B
```

Cross parameter-effect matrix A→B:

```{matlab}
DeltaBA = CB * pinv(CA) * B
```

One can see that in the second expression, the effect corresponding to `CA` involving regressors 1 & 2 has been moved to regressors 3 & 4, thereby matching the parameter-effect matrix resulting from the first expression. (Values like `-0.000` should be zero, but are not exactly due to limited numerical precision.)

Combined 'numerator' of pattern stability:

```{matlab}
1/n * DeltaBA' * X' * X * DeltaB
```

The 'denominator' is the identity matrix and therefore its inverse is the identity, too, and the combined 'numerator' and 'denominator' is identical to the 'numerator' alone.

The pattern stability is:

```{matlab}
Dx = trace(1/n * DeltaBA' * X' * X * DeltaB * inv(Sigma))
```

Because there is perfect pattern stability, the value of `Dx` is identical to the pattern distinctness `D` for either one of the contrasts:

```{matlab}
DeltaA = CA * pinv(CA) * B;
DA = trace(1/n * DeltaA' * X' * X * DeltaA * inv(Sigma))
DB = trace(1/n * DeltaB' * X' * X * DeltaB * inv(Sigma))
```

The specific value arises from the fact that these pattern distinctness values correspond to a Mahalanobis distance of 1 (length of pattern difference is 1 and error covariance matrix is identity) and the sample sizes are 3 for both conditions and 12 in total, i.e. a ratio 6/12 = 1/2 of observations contribute, combined with a factor 1/4 according to Eq. 10 of @allefeld2014.


# Perfect pattern instability

Pattern stability is minimal (by absolute value) when the two pattern differences involved are orthogonal to each other.

## Define modified true situation

Create patterns across two variables for the difference between conditions 1 & 2 and 3 & 4. They are orthogonal, the first only involving variable 1 and the second only involving variable 2.

```{matlab}
b21 = [1 0];
b43 = [0 1];
```

Create parameters for the five regressors across two variables.

```{matlab}
b1 = [1, 2];
b2 = b1 + b21;
b3 = [3, 4];
b4 = b3 + b43;
b5 = [5, 6];
B = [b1; b2; b3; b4; b5]
```

## Compute pattern stability

```{matlab}
DeltaB = CB * pinv(CB) * B
DeltaBA = CB * pinv(CA) * B
Dx = trace(1/n * DeltaBA' * X' * X * DeltaB * inv(Sigma))
```

As expected, the pattern stability is zero within numerical precision.


# Orthogonal patterns with a non-identity error covariance matrix

However, it has to be kept in mind that the definition of orthogonality underlying pattern stability is relative to the error covariance matrix.

## Define modified true situation

Modify the error covariance matrix to include a positive correlation between the two variables.

```{matlab}
Sigma = [1 0.5; 0.5 1]
```

## Compute pattern stability

```{matlab}
Dx = trace(1/n * DeltaBA' * X' * X * DeltaB * inv(Sigma))
```

The two pattern differences are orthogonal in the space of original variables. However, pattern distinctness is quantified 'in units of the multivariate error variance', expressed through the factor `inv(Sigma)`, which implicitly transforms the patterns into a spatially 'whitened' version. In this whitened-variable space, the two patterns are no longer orthogonal.

```{matlab}
%| echo: false
%plot -w 1000 -h 500 -r 130 -f svg
arrow = @(x, y) quiver(x(1), y(1), x(2) - x(1), y(2) - y(1), 'off', ...
    'MaxHeadSize', 0.5, 'LineWidth', 2);   

figure

subplot(1, 2, 1)
arrow(B(1:2, 1), B(1:2, 2))
hold all
arrow(B(3:4, 1), B(3:4, 2))
xlim([0 5.5])
ylim([0 5.5])
xlabel('variable 1')
ylabel('variable 2')
title('original')
axis square

Bw = B / sqrtm(Sigma);

subplot(1, 2, 2)
arrow(Bw(1:2, 1), Bw(1:2, 2))
hold all
arrow(Bw(3:4, 1), Bw(3:4, 2))
xlim([0 5.5])
ylim([0 5.5])
xlabel('variable 1')
ylabel('variable 2')
title('whitened')
legend({'1 → 2', '3 → 4'}, 'Location', 'SouthEast')
axis square
```

In fact, after whitening the pattern differences point into partially opposite directions, reflected in a negative pattern stability.

Note that the same effect can occur without correlation between the variables, if the two variables have different variances and the two orthogonal patterns are not aligned with the two variables.

```{matlab}
D = trace(1/n * DeltaB' * X' * X * DeltaB * inv(Sigma))
```

---
references:
- id: allefeld2014
  accessed:
    - year: 2019
      month: 9
      day: 21
  author:
    - family: Allefeld
      given: Carsten
    - family: Haynes
      given: John-Dylan
  citation-key: allefeld2014
  container-title: NeuroImage
  container-title-short: NeuroImage
  DOI: 10.1016/j.neuroimage.2013.11.043
  ISSN: '10538119'
  issued:
    - year: 2014
      month: 4
  language: en
  page: 345-357
  source: DOI.org (Crossref)
  title: >-
    Searchlight-based multi-voxel pattern analysis of fMRI by cross-validated
    MANOVA
  type: article-journal
  URL: https://linkinghub.elsevier.com/retrieve/pii/S1053811913011920
  volume: '89'
---