[
  {
    "objectID": "reference.html",
    "href": "reference.html",
    "title": "Reference documentation",
    "section": "",
    "text": "cross-validated (Cross-) MANOVA on regions\n[Ds, ps] = cvCrossManovaRegion(modelDir, regions, analyses, lambda = 1e-8)\n\n\n\nmodelDir\ndirectory where the SPM.mat file referring to an estimated model is located\n\n\nregions\nregion mask(s), cell array of logical 3D volumes or filenames\n\n\nanalyses\ncell array of analysis specifications\n\n\nlambda\nregularization parameter (0–1)\n\n\nDs\npattern distinctness or pattern stability, cell array analyses × regions\n\n\nps\nnumber of voxels in the regions\n\n\n\nRegarding the parameters analyses and lambda and the contents of the cells of Ds, see also Analysis, CvCrossManova.CvCrossManova, CvCrossManova.runAnalyses.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "reference.html#cvcrossmanovaregion",
    "href": "reference.html#cvcrossmanovaregion",
    "title": "Reference documentation",
    "section": "",
    "text": "cross-validated (Cross-) MANOVA on regions\n[Ds, ps] = cvCrossManovaRegion(modelDir, regions, analyses, lambda = 1e-8)\n\n\n\nmodelDir\ndirectory where the SPM.mat file referring to an estimated model is located\n\n\nregions\nregion mask(s), cell array of logical 3D volumes or filenames\n\n\nanalyses\ncell array of analysis specifications\n\n\nlambda\nregularization parameter (0–1)\n\n\nDs\npattern distinctness or pattern stability, cell array analyses × regions\n\n\nps\nnumber of voxels in the regions\n\n\n\nRegarding the parameters analyses and lambda and the contents of the cells of Ds, see also Analysis, CvCrossManova.CvCrossManova, CvCrossManova.runAnalyses.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "reference.html#cvcrossmanovasearchlight",
    "href": "reference.html#cvcrossmanovasearchlight",
    "title": "Reference documentation",
    "section": "function cvCrossManovaSearchlight",
    "text": "function cvCrossManovaSearchlight\ncross-validated (Cross-) MANOVA on searchlight\ncvCrossManovaSearchlight(modelDir, slRadius, analyses, lambda = 1e-8)\n\n\n\nmodelDir\ndirectory where the SPM.mat file referring to an estimated model is located\n\n\nslRadius\nradius of the searchlight sphere in voxels\n\n\nanalyses\ncell array of analysis specifications\n\n\nlambda\nregularization parameter (0–1)\n\n\n\nResults are written to files the same directory:\n\n\n\nspmD_A####_P####.nii\nimages of pattern distinctness or pattern stability; analysis and permutation are identified by numbers\n\n\nVPSL.nii\nimage of the number of voxels for each searchlight\n\n\nccmsParameters.mat\nrecord of the analysis parameters\n\n\n\nThe searchlight procedure includes a checkpointing mechanism: Intermediate results are saved to a file ccmsCheckpoint….mat, where … stands for a 32-digit hexadecimal checksum. If an analysis is interrupted, running it again recovers partial results from the checkpoint file and continues from there.\nNote that this only works if the analysis parameters remain identical. In particular, if the analysis includes randomly selected permutations, make sure to initialize Matlab’s random number generator before the selection. It is recommended to run s = rng('shuffle') once, note the values of s.Seed and s.Type, and then to include rng(&lt;seed&gt;, &lt;type&gt;) in your analysis pipeline.\nRegarding the parameters slRadius, analyses and lambda see also slSize, Analysis, CvCrossManova.CvCrossManova.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "reference.html#analysis",
    "href": "reference.html#analysis",
    "title": "Reference documentation",
    "section": "class Analysis",
    "text": "class Analysis\ndata type representing an analysis\n\nproperties\n\n\n\nCA\n‘training’ contrast, regressors × subcontrasts\n\n\nCB\n‘validation’ contrast, regressors × subcontrasts\n\n\nsessionsA\n‘training’ sessions, folds × sessions logical\n\n\nsessionsB\n‘validation’ sessions, folds × sessions logical\n\n\nL\nnumber of folds\n\n\nm\nnumber of sessions\n\n\nperms\nsign permutations, permutations × sessions\n\n\n\n\n\nstatic method leaveOneSessionOut\ncreate Analysis object for leave-one-session-out cross-validation\nanalysis = Analysis.leaveOneSessionOut(m, C)\nanalysis = Analysis.leaveOneSessionOut(m, CA, CB)\nThis is a convenience method which calls the constructor with sessionsB = logical(eye(m)) and sessionsA = not(sessionsB), the specification of standard leave-one-session-out cross-validation.\nIf only one contrast C is specified, it is used for both ‘training’ (CA) and ‘validation’ (CB).\n\n\nconstructor Analysis\ncreate Analysis object\nanalysis = Analysis(CA, CB, sessionsA, sessionsB)\n\n\nmethod addPermutations\nadd sign permutations of per-session parameter estimates\nanalysis.addPermutations(maxPerms = 1000)\nThis method adds information to analysis that sign permutations should be applied, so that different values of D for the different permutations are computed.\n\n\n\n\n\n\nWarning\n\n\n\nSign permutations are used to test a per-subject null hypothesis of no effect in cross-validated MANOVA analyses. It does not make sense to apply them to cross-validated Cross-MANOVAs.\n\n\nFor m sessions there are formally 2m per-session sign permutations, but not all of them lead to different permutation values. The number of unique permutations depends on the ‘training’ and ‘validation’ sessions used in different folds (sessionsA, sessionsB). This method determines which permutations lead to different outcomes and makes sure only those unique permutations are performed.\nIf the number of unique permutations exceeds maxPerms, a random subset of maxPerms is chosen (including the neutral permutation, which is always permutation 1).\n\n\nmethod disp\ntextually display information\nanalysis.disp()\nThis method overrides Matlab’s disp, so you can also use disp(analysis) or simply analysis without semicolon to get the same output.\n\n\nmethod show\ngraphically display information\nfig = analysis.show()\nThe method creates a figure and returns the handle.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "reference.html#cvcrossmanova",
    "href": "reference.html#cvcrossmanova",
    "title": "Reference documentation",
    "section": "class CvCrossManova",
    "text": "class CvCrossManova\ndata type representing data and analyses\n\nproperties\n\n\n\nYs\ncell array of per-session design matrices, observations × variables\n\n\nXs\ncell array of per-session data matrices, observations × regressors\n\n\nanalyses\ncell array of Analysis objects\n\n\nlambda\nstrength of regularization (0–1) towards Euclidean metric\n\n\nfs\narray of per-session residual degrees of freedom\n\n\nm\nnumber of sessions\n\n\nns\narray of per-session numbers of observations (rows)\n\n\nnResults\narray of per-analysis returned numbers of results\n\n\n\n\n\nconstructor CvCrossManova\ncreate CvCrossManova object\nccm = CvCrossManova(Ys, Xs, analyses, lambda = 1e-8, fs = ...)\nA CvCrossManova object stores data matrices, design matrices, analysis definitions, and further parameters. Upon creation, it also estimates GLM parameters and errors. Actual analyses are then performed on subsets of variables by calling the method runAnalyses.\nThe parameter λ (from 0 to 1) controls the amount of shrinkage regularization applied to the estimate of the error covariance matrix. A small value can be used to improve the numerical and statistical stability of the estimate; the default is 10−8. A value of 1 can be used to disregard the covariance structure, because it replaces the estimated error covariance matrix by a diagonal matrix where every diagonal element is the average variance across variables. This can be useful for Cross-MANOVA if it is intended to quantify orthogonality w.r.t the original data space (Euclidean metric) instead of the whitened space.\nIf the per-session residual degrees of freedom fs are not specified, they are calculated under the assumption that the data observations are uncorrelated, as ns(k) - rank(Xs{k}). If the observations have been only approximately decorrelated or have been filtered, correct values should be explicitly specified.\n\n\nmethod runAnalyses\nrun the defined analyses on (a subset of) the variables\nDs = ccm.runAnalyses(vi)\nDs = ccm.runAnalyses()\nvi specifies the variables to be included in the analysis, as column indices into the data matrices Ys. If omitted, all variables are included.\nDs is a cell array of analysis results where each element results from the corresponding element in analyses. Whether this result is an estimate of pattern distinctness D or pattern stability D× depends on the contrasts and regressors involved in the analyses.\nFor an analysis which does not include permutations, the cell array element is a scalar; otherwise it is an array of permutation values, where the first element is the actual estimate (corresponding to the neutral permutation).\nTo determine how many values will be included in each of the elements of Ds before actually running an analysis, e.g. for preallocation, use the property nResults. It is a vector where each element gives the number of values returned for the corresponding analysis (i.e. the number of permutations).\n\n\nmethod checkEstimability\ncheck estimability of all analyses’ contrasts in all sessions\n[estimability, problems] = ccm.checkEstimability()\nestimability is a table with one row per session and one column per analysis & contrast. ‘true’ means that the contrast is estimable, ‘false’ that it is not estimable, ‘–’ that the contrast does not apply to the session. The check is performed via the function contrastEstimable.\nproblems indicates whether there are any inestimable contrasts (logical).\nIt is not usually necessary to use this method explicitly, because estimability is checked upon creation of a CvCrossManova object.\n\n\nmethod disp\ntextually display information\ncm.disp()\nThis method overrides Matlab’s disp, so you can also use disp(cm) or simply cm without semicolon to get the same output.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "reference.html#slsize",
    "href": "reference.html#slsize",
    "title": "Reference documentation",
    "section": "function slSize",
    "text": "function slSize\nsearchlight size as a function of searchlight radius\npMax = slSize(slRadius)\nslSizes(slRadius = 5)\nWith the first syntax, the number of voxels corresponding to slRadius is returned as pMax.\nWith the second syntax, a table of corresponding values of slRadius and pMax is printed. By default, the table includes slRadius values from 0 to 5, but another upper limit can be specified. The values of slRadius are chosen such that all possible searchlight sizes in that range are listed.\nNote that a voxel is included in a searchlight if its distance from the center voxel is smaller than or equal to the radius. Fractional values are possible and meaningful.",
    "crumbs": [
      "Reference documentation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/pairwise.html",
    "href": "tutorial-fmri-spm/pairwise.html",
    "title": "Pairwise Cross-validated MANOVA",
    "section": "",
    "text": "% select subject\nsub = 'subj1';\n% load information\nload(fullfile(sub, 'info.mat'))\n% directory with estimated model\nmodelDir = fullfile(sub, 'model');",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Pairwise Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/pairwise.html#define-contrasts-and-analyses",
    "href": "tutorial-fmri-spm/pairwise.html#define-contrasts-and-analyses",
    "title": "Pairwise Cross-validated MANOVA",
    "section": "Define contrasts and analyses",
    "text": "Define contrasts and analyses\nHaxby et al. used a pairwise correlation-based classifier applied to parameter estimates for each condition, estimated across even and odd sessions, respectively (see Footnote 18 of the paper).\nCross-validated MANOVA replaces accuracy based on classification by explained multivariate variance based on contrasts. The equivalent of pairwise classification is a contrast with a 1 for one of the two categories, a −1 for the other, and zeros otherwise. We construct these 28 contrasts, and then analyses based on them using two folds, odd → even and even → odd:\n\n% construct pairwise contrasts and analyses\nanalyses = cell(nConds, nConds);\nodd = (mod(1 : nSessions, 2) == 1);\neven = (mod(1 : nSessions, 2) == 0);\nfor i = 1 : nConds\n    for j = i + 1 : nConds\n        C = zeros(nConds, 1);\n        C([i, j]) = [1, -1];\n        analyses{i, j} = Analysis(C, C, [odd ; even], [even ; odd]);\n    end\nend\n% reduce to defined analyses\nind = find(~cellfun(@isempty, analyses)) .';\nanalyses = analyses(ind);\n\nFor illustration, analysis #12 has this structure:\n\nanalyses{12}.show()",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Pairwise Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/pairwise.html#run-analyses-on-region-of-interest",
    "href": "tutorial-fmri-spm/pairwise.html#run-analyses-on-region-of-interest",
    "title": "Pairwise Cross-validated MANOVA",
    "section": "Run analyses on region of interest",
    "text": "Run analyses on region of interest\nHaxby et al. applied their analysis to several regions of interest. The data available to us contain masks for three regions, of which we here use the first.\n\n[Ds, ps] = cvCrossManovaRegion(modelDir, regions(1), analyses);\n\n\ncvCrossManovaRegion\n\nloading data via subj1/model/SPM.mat\n  27638 voxels within brain mask\n    572 voxels within brain mask in subj1/mask4_vt.nii\n  572 voxels within brain mask in all regions\n  reading images from subj1/rbold.nii,????\n  1452 of 1452 volumes loaded\n  whitening\n  high-pass-filtering\n  sum(fs) = 1452 - 48 - 180 = 1224   [SPM: trRV = 1224  erdf = 1224]\n\ncomputing Cross-validated (Cross-) MANOVA\n  CvCrossManova:\n    Data:\n      session     n      p     q      f \n         1       121    572    15    102\n         2       121    572    15    102\n         3       121    572    15    102\n         4       121    572    15    102\n         5       121    572    15    102\n         6       121    572    15    102\n         7       121    572    15    102\n         8       121    572    15    102\n         9       121    572    15    102\n        10       121    572    15    102\n        11       121    572    15    102\n        12       121    572    15    102\n    lambda: 1e-08\n    Analysis 1:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 2:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 3:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 4:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 5:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 6:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 7:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 8:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 9:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 10:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 11:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 12:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 13:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 14:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 15:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 16:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 17:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 18:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 19:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 20:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 21:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 22:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 23:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 24:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 25:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 26:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 27:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n    Analysis 28:\n      2 fold(s), 12 session(s)\n      CA = CB:  8 × 1, 1-dimensional\n      no permutations (besides neutral)\n\n\nThe results are contained in column 1 of the cell array Ds. We assemble them into a matrix, filling in the identical values in the lower triangular part and leaving zeros on the diagonal, and visualise the matrix as a heatmap:\n\n% assemble\nDsMatrix = zeros(nConds, nConds);\nDsMatrix(ind) = [Ds{:, 1}];\nDsMatrix = DsMatrix + DsMatrix .';\n% visualize\nfig = figure();\nfig.Position(3:4) = [750, 674];\nheatmap(conditions, conditions, DsMatrix, ...\n    FontName=get(0, 'defaultTextFontName'));\nylabel(gca().NodeChildren(2), 'D')",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Pairwise Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/pairwise.html#comparison-with-original-analysis-results",
    "href": "tutorial-fmri-spm/pairwise.html#comparison-with-original-analysis-results",
    "title": "Pairwise Cross-validated MANOVA",
    "section": "Comparison with original analysis results",
    "text": "Comparison with original analysis results\nHaxby et al.’s main result (Table 1) was the identification accuracy for each of the eight categories averaged across classification pairs, and then averaged across six subjects. For ‘all ventral temporal object-selective cortex’, presumably corresponding to the first of the available masks (mask4_vt.nii) they reported the following accuracies (in percent):\n\nmeanAcc = [100, 100,  98,  90,  92,  92,  96, 100];\n\nOur corresponding result is the average pattern distinctness across the 7 pairwise contrasts each category was involved in:\n\nmeanD = sum(DsMatrix) / (nConds - 1)\n\nmeanD =\n  Columns 1 through 6\n      0.90465       1.0821      0.82983      0.53644      0.61424      0.65634\n  Columns 7 through 8\n      0.63137      0.86377\n\n\nPlotted against each other:\n\nfig = figure();\nfig.Position(3:4) = [750, 713];\nfor i = 1 : nConds\n    plot(meanAcc(i), meanD(i), '.', Color=colors(i), MarkerSize=20)\n    hold all\nend\nlegend(conditions, Interpreter=\"none\", Location=\"NorthWest\")\nxlim([89, 101])\nylim([0.45, 1.15])\nxlabel(\"mean accuracy / %\")\nylabel(\"mean pattern distinctness\")\n\n\n\n\n\n\n\n\n\n\nThe ranking is similar though not identical. Note that the results cannot be completely equivalent since our analysis is based on one subject, while the mean accuracy is additionally averaged across subjects.",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Pairwise Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/model.html",
    "href": "tutorial-fmri-spm/model.html",
    "title": "Model",
    "section": "",
    "text": "% select subject\nsub = 'subj1';\n% load information\nload(fullfile(sub, 'info.mat'))\n% BOLD data (contains realignment information)\nfnBOLD = fullfile(sub, 'bold.nii');\n% realigned BOLD data\nfnrBOLD = fullfile(sub, 'rbold.nii');\n% directory for model\nmodelDir = fullfile(sub, 'model');\n% file containing model\nfnSPM = fullfile(modelDir, 'SPM.mat');",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Model"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/model.html#specify-the-model",
    "href": "tutorial-fmri-spm/model.html#specify-the-model",
    "title": "Model",
    "section": "Specify the model",
    "text": "Specify the model\nFrom Footnote 18 of the paper:\n\nTo determine the patterns of response to each category on even-numbered and odd-numbered runs, we used a 16-regressor model—eight regressors to model the response to each category relative to rest on even runs and eight regressors to model the response to each category on odd runs with no regressor that contrasted all stimulus blocks to rest.\n\nWe here instead follow the standard approach of SPM, and use session-wise design matrices. Each of them contains eight HRF-convoluted regressors corresponding to the stimulus presentations of the eight conditions, six motion regressors derived from the realignment parameters, and a constant regressor.\n\n% get realignment parameters for motion regressors\nV = spm_vol(fnBOLD);\nmat = cat(4, V.mat);\n\n% create directory\nmkdir(modelDir)\n\n% SPM module 'fMRI model specification'\nfmri_spec = struct;\nfmri_spec.dir = {modelDir};         % model directory\nfmri_spec.timing.units = 'secs';    % units for onsets and durations\nfmri_spec.timing.RT = TR;           % repetition time (interscan interval)\nfmri_spec.timing.fmri_t = 25;       % microtime resolution: 0.1 s\nfmri_spec.timing.fmri_t0 = 12;      % microtime onset: middle of scan\n% for each session\nfor si = 1 : nSessions\n    % indices of scans in 4d BOLD image corresponding to session\n    vi = (si - 1) * nVolsPerSession + (1 : nVolsPerSession);\n    fmri_spec.sess(si).scans = arrayfun(@(i) ...\n        sprintf('%s,%d', ...                % SPM's &lt;filename&gt;,&lt;scan&gt; syntax\n            fullfile(pwd, fnrBOLD), i), ... % filename must include full path\n            vi, ...\n            'UniformOutput', false)';\n    % for each condition\n    for ci = 1 : nConds\n        % name, onsets, and durations\n        fmri_spec.sess(si).cond(ci).name = conditions{ci};\n        fmri_spec.sess(si).cond(ci).onset = onsets{si, ci};\n        fmri_spec.sess(si).cond(ci).duration = durations{si, ci};\n        fmri_spec.sess(si).cond(ci).tmod = 0;   % no time modulation\n        fmri_spec.sess(si).cond(ci).orth = 1;\n    end\n    fmri_spec.sess(si).multi = {''};        % no 'multiple conditions'\n    % motion regressors from realignment parameters\n    Q = nan(nVolsPerSession, 6);\n    for i = 1 : nVolsPerSession\n        qq = spm_imatrix(mat(:, :, vi(i)) / mat(:, :, vi(1)));\n        Q(i, :) = qq(1 : 6);\n    end\n    for mi = 1 : 6\n        fmri_spec.sess(si).regress(mi).name = sprintf('motion(%d)', mi);\n        fmri_spec.sess(si).regress(mi).val = Q(:, mi);\n    end\n    fmri_spec.sess(si).multi_reg = {''};    % no 'multiple regressors'\n    fmri_spec.sess(si).hpf = 128;           % high-pass cutoff time (def.)\nend\nfmri_spec.bases.hrf.derivs = [0 0]; % no HRF derivatives\nfmri_spec.volt = 1;                 % do not model interactions\nfmri_spec.global = 'None';          % no global intensity normalization\nfmri_spec.mthresh = 0.8;            % masking threshold (def.)\nfmri_spec.mask = {''};              % no explicit mask\nfmri_spec.cvi = 'AR(1)';            % model serial correlations as AR(1) (def.)\n% run module\nmatlabbatch = {};\nmatlabbatch{1}.spm.stats.fmri_spec = fmri_spec;\nspm_jobman('run', matlabbatch(1))\n\nInitialising batch system... done.\n\n\n------------------------------------------------------------------------\n28-Oct-2023 19:45:11 - Running job #1\n------------------------------------------------------------------------\n28-Oct-2023 19:45:12 - Running 'fMRI model specification'\n\nSPM12: spm_fMRI_design (v7739)                     19:45:12 - 28/10/2023\n========================================================================\nSaving fMRI design                      :               ...SPM.mat saved\n\nSPM12: spm_fmri_spm_ui (v7738)                     19:45:13 - 28/10/2023\n========================================================================\nMapping files                           :                        ...done\nCalculating globals                     :                        ...done\nSaving SPM configuration                :               ...SPM.mat saved\nSaving SPM configuration                :               ...SPM.mat saved\nCompleted                               :          19:45:25 - 28/10/2023\n28-Oct-2023 19:45:25 - Done    'fMRI model specification'\n28-Oct-2023 19:45:25 - Done",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Model"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/model.html#visualize-the-model",
    "href": "tutorial-fmri-spm/model.html#visualize-the-model",
    "title": "Model",
    "section": "Visualize the model",
    "text": "Visualize the model\n\nload(fullfile(modelDir, 'SPM.mat'), 'SPM')\nfilenames = SPM.xY.P(:, numel(pwd) + 2 : end);\nfilenames = reshape(cellstr(filenames), size(SPM.xY.VY));\nspm_DesRep('DesMtx', SPM.xX, filenames, SPM.xsDes);",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Model"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/model.html#estimate-the-model",
    "href": "tutorial-fmri-spm/model.html#estimate-the-model",
    "title": "Model",
    "section": "Estimate the model",
    "text": "Estimate the model\n\n% SPM module 'fMRI model estimation'\nfmri_est = struct;\nfmri_est.spmmat = {fnSPM};          % path to `SPM.mat`\nfmri_est.write_residuals = 0;       % do not write residuals\nfmri_est.method.Classical = 1;      % frequentist statistical estimation\n% run module\nmatlabbatch = {};\nmatlabbatch{1}.spm.stats.fmri_est = fmri_est;\nspm_jobman('run', matlabbatch(1))\n\n\n\n------------------------------------------------------------------------\n28-Oct-2023 19:45:32 - Running job #1\n------------------------------------------------------------------------\n28-Oct-2023 19:45:32 - Running 'Model estimation'\n\nSPM12: spm_spm (v7738)                             19:45:33 - 28/10/2023\n========================================================================\n\nSPM12: spm_est_non_sphericity (v7577)              19:45:35 - 28/10/2023\n========================================================================\nChunk   2/2                             :                        ...done\nTemporal non-sphericity (27073 voxels)  :             ...ReML estimation\n  ReML Block 1                \n  ReML Iteration 1                      :        ...9.827664e+00 [+4.25]\n  ReML Iteration 2                      :        ...5.884532e-01 [+4.50]\n  ReML Iteration 3                      :        ...1.599118e-02 [+4.75]\n  ReML Block 2                \n  ReML Iteration 1                      :        ...1.118494e+01 [+4.25]\n  ReML Iteration 2                      :        ...8.181662e-01 [+4.50]\n  ReML Iteration 3                      :        ...2.286568e-02 [+4.75]\n  ReML Block 3                \n  ReML Iteration 1                      :        ...6.901230e+00 [+4.25]\n  ReML Iteration 2                      :        ...1.429964e-01 [+4.50]\n  ReML Iteration 3                      :        ...1.248735e-03 [+4.75]\n  ReML Block 4                \n  ReML Iteration 1                      :        ...9.365361e+00 [+4.25]\n  ReML Iteration 2                      :        ...3.411252e-01 [+4.50]\n  ReML Iteration 3                      :        ...5.701104e-03 [+4.75]\n  ReML Block 5                \n  ReML Iteration 1                      :        ...1.027357e+01 [+4.25]\n  ReML Iteration 2                      :        ...4.295659e-01 [+4.50]\n  ReML Iteration 3                      :        ...7.688102e-03 [+4.75]\n  ReML Block 6                \n  ReML Iteration 1                      :        ...1.323103e+01 [+4.25]\n  ReML Iteration 2                      :        ...3.478206e-01 [+4.50]\n  ReML Iteration 3                      :        ...6.419885e-03 [+4.75]\n  ReML Block 7                \n  ReML Iteration 1                      :        ...1.774148e+01 [+4.25]\n  ReML Iteration 2                      :        ...1.183276e-01 [+4.50]\n  ReML Iteration 3                      :        ...1.092870e-03 [+4.75]\n  ReML Block 8                \n  ReML Iteration 1                      :        ...1.752418e+01 [+4.25]\n  ReML Iteration 2                      :        ...1.037713e-01 [+4.50]\n  ReML Iteration 3                      :        ...8.001813e-04 [+4.75]\n  ReML Block 9                \n  ReML Iteration 1                      :        ...2.328423e+01 [+4.25]\n  ReML Iteration 2                      :        ...8.247045e-01 [+4.50]\n  ReML Iteration 3                      :        ...1.707144e-02 [+4.75]\n  ReML Block 10               \n  ReML Iteration 1                      :        ...2.362216e+01 [+4.25]\n  ReML Iteration 2                      :        ...2.052704e-01 [+4.50]\n  ReML Iteration 3                      :        ...9.280063e-04 [+4.75]\n  ReML Block 11               \n  ReML Iteration 1                      :        ...7.029397e+00 [+4.25]\n  ReML Iteration 2                      :        ...4.771267e-03 [+4.50]\n  ReML Block 12               \n  ReML Iteration 1                      :        ...7.075062e+00 [+4.25]\n  ReML Iteration 2                      :        ...5.880034e-02 [+4.50]\n\nSPM12: spm_spm (v7738)                             19:45:41 - 28/10/2023\n========================================================================\nChunk   2/2                             :                        ...done\nSpatial non-sphericity (over scans)     :                        ...done\nSaving SPM.mat                          :                        ...done\nCompleted                               :          19:45:52 - 28/10/2023\nDone\n28-Oct-2023 19:45:52 - Done    'Model estimation'\n28-Oct-2023 19:45:52 - Done\n\n\n\nOur analyses only need the updates to the SPM.mat file made during estimation, not the parameter estimates themselves. We therefore delete the created beta_####.nii files.\n\nload(fnSPM, 'SPM');\nfor i = 1 : numel(SPM.Vbeta)\n    spm_unlink(fullfile(modelDir, SPM.Vbeta(i).fname))\nend",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Model"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/index.html",
    "href": "tutorial-fmri-spm/index.html",
    "title": "Tutorial: fMRI with SPM",
    "section": "",
    "text": "As an example for how to use the toolbox, here we apply Cross-validated MANOVA as well as Cross-validated Cross-MANOVA to the data of subject 1 from Haxby et al. (2001).\n\nHaxby, J. V., Gobbini, M.  Ida., Furey, M. L., Ishai, A., Schouten, J. L., & Pietrini, P. (2001). Distributed and Overlapping Representations of Faces and Objects in Ventral Temporal Cortex. Science, 293, 2425–2430. https://doi.org/10.1126/science.1063736\nThe analysis is broken down into several steps in the following subpages:\n\n\n\n\n\n\n\n\n\n\n\n\nPreparation\n\n\nData are downloaded, preprocessed, and design information extracted\n\n\n\n\n\n\n\n\n\n\n\n\nModel\n\n\nA model for the data is set up and estimated in SPM\n\n\n\n\n\n\n\n\n\n\n\n\nCross-validated MANOVA\n\n\nPattern distinctness is computed in regions of interest and via searchlight\n\n\n\n\n\n\n\n\n\n\n\n\nPairwise Cross-validated MANOVA\n\n\nPattern distinctness is computed in a way approximating the original analysis\n\n\n\n\n\n\n\n\n\n\n\n\nCross-validated Cross-MANOVA\n\n\nPattern stability is computed in regions of interest and via searchlight\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Tutorial: fMRI with SPM"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CvCrossManova Toolbox",
    "section": "",
    "text": "This project is under development and not yet usable.\n\n\n\n\n\n\nInstallation\n\n\nHow to download and install the toolbox and its dependencies\n\n\n\n\n\n\n\n\n\n\n\n\nTutorial: fMRI with SPM\n\n\nExample analysis of data of Haxby et al. (2001)\n\n\n\n\n\n\n\n\n\n\n\n\nReference documentation\n\n\nDetailed information about toolbox functions and classes\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\nThis software is copyrighted © 2023 by Carsten Allefeld and released under the terms of the GNU General Public License, version 3 or later. Remi Gau, Polina Iamshchinina, and Thomas Christophel contributed to the code.\nIt has been developed with Matlab R2023a (v9.14) and SPM12 r7771, but should work with later and slightly earlier versions.\nThe software does not depend on other toolboxes, except cvCrossManovaRegion and cvCrossManovaSearchlight which depend on SPM12 being installed."
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "Installation",
    "section": "",
    "text": "TODO",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/preparation.html",
    "href": "tutorial-fmri-spm/preparation.html",
    "title": "Preparation",
    "section": "",
    "text": "% select subject\nsub = 'subj1';",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Preparation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/preparation.html#download-and-unpack-data",
    "href": "tutorial-fmri-spm/preparation.html#download-and-unpack-data",
    "title": "Preparation",
    "section": "Download and unpack data",
    "text": "Download and unpack data\nThe data for the subject are downloaded from PyMVPA as a .tar.gz archive, and the archive is unpacked.\n\nfn = [sub '-2010.01.14.tar.gz'];\nurl = ['http://data.pymvpa.org/datasets/haxby2001/' fn];\nurlwrite(url, fn);\nuntar(fn)\ndelete(fn)\n\nThe included NIfTI images are individually gzip-compressed and need to be uncompressed.\n\nfiles = dir(fullfile(sub, '*.nii.gz'));\nfor i = 1 : numel(files)\n    fprintf('uncompressing %s\\n', files(i).name)\n    gunzip(fullfile(sub, files(i).name))\n    delete(fullfile(sub, files(i).name))\nend\n\nuncompressing anat.nii.gz\nuncompressing bold.nii.gz\nuncompressing mask4_vt.nii.gz\nuncompressing mask8_face_vt.nii.gz\nuncompressing mask8_house_vt.nii.gz\nuncompressing mask8b_face_vt.nii.gz\nuncompressing mask8b_house_vt.nii.gz\n\n\nThe mask images are not documented in detail. Based on the filenames and the in-mask volume, we assume the following correspondence between regions listed in Table 1 of the paper and mask image files:\n\nmask4_vt.nii\n\n‘all ventral temporal object-selective cortex’\n\nmask8b_face_vt.nii\n\n‘region maximally responsive to faces’\n\nmask8b_house_vt.nii\n\n‘region maximally responsive to houses’\n\n\n\n\n\n\n\n\nCaution\n\n\n\nTODO: do they need to be aligned to the anatomical or the mean BOLD image?\n\n\n\nfnBOLD = fullfile(sub, 'bold.nii');\nregions = {fullfile(sub, 'mask4_vt.nii'), ...\n           fullfile(sub, 'mask8b_face_vt.nii'), ...\n           fullfile(sub, 'mask8b_house_vt.nii')};",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Preparation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/preparation.html#obtain-experimental-design-information",
    "href": "tutorial-fmri-spm/preparation.html#obtain-experimental-design-information",
    "title": "Preparation",
    "section": "Obtain experimental design information",
    "text": "Obtain experimental design information\nThe BOLD data are contained in a single 4-dimensional NIfTI file.\n\nN = nifti(fnBOLD);\nsize(N.dat)\ndiag(N.mat(1:3, 1:3))'\nTR = N.timing.tspace\n\nans =\n          40          64          64        1452\nans =\n         -3.5         3.75         3.75\nTR =\n          2.5\n\n\nThis file contains a timeseries of 1452 scans at at repetition time of 2.5 s, each of which has 40 × 64 × 64 voxels of size 3.5 × 3.75 × 3.75 mm.\nFrom Footnote 18 of the paper:\n\nStimuli were gray-scale images of faces, houses, cats, bottles, scissors, shoes, chairs, and nonsense patterns. … Twelve time series were obtained in each subject. Each time series began and ended with 12 s of rest and contained eight stimulus blocks of 24-s duration, one for each category, separated by 12-s intervals of rest. Stimuli were presented for 500 ms with an interstimulus interval of 1500 ms.\n\nEach of the 12 sessions therefore had a duration of (12 + 24) × 8 + 12 = 300 s, corresponding to 120 TRs (121 scans).\nInformation about the onsets and durations of stimuli in this subject are contained in a file labels.txt.\n\nlabels = readtable(fullfile(sub, 'labels.txt'), 'Delimiter', ' ');\nhead(labels)\n\n       labels       chunks\n    ____________    ______\n    {'rest'    }      0   \n    {'rest'    }      0   \n    {'rest'    }      0   \n    {'rest'    }      0   \n    {'rest'    }      0   \n    {'rest'    }      0   \n    {'scissors'}      0   \n    {'scissors'}      0   \n\n\n\ntail(labels)\n\n       labels       chunks\n    ____________    ______\n    {'scissors'}      11  \n    {'scissors'}      11  \n    {'rest'    }      11  \n    {'rest'    }      11  \n    {'rest'    }      11  \n    {'rest'    }      11  \n    {'rest'    }      11  \n    {'rest'    }      11  \n\n\nIt has 1452 rows, corresponding to the scans of the BOLD data. The format is not documented, but it appears that the column labels contains the experimental condition (stimulus type), and the column chunk distinguishes the 12 sessions by an index from 0 to 11, each with 121 rows. In the order of the paper, the condition names are\n\nconditions = [\"face\", \"house\", \"cat\", \"bottle\", ...\n    \"scissors\", \"shoe\", \"chair\", \"scrambledpix\"];\n\nplus \"rest\" for the rest intervals.\nStimulus blocks comprise 9 rows with rest intervals of 5 or 6 rows, which does not exactly correspond to the description above because the stimulus presentation length is incompatible with the TR. We therefore use these data only to extract the condition index for each block, but recreate more precise stimulus timing information.\n\nnSessions = 12;\nnConds = numel(conditions);\nonsets = cell(nSessions, nConds);\ndurations = cell(nSessions, nConds);\n% for each session\nfor si = 1 : nSessions\n    % extract condition for each block (from its middle)\n    cond = labels.labels(labels.chunks == si - 1);\n    [~, condInd] = ismember(cond, conditions);\n    condInd = condInd(round((24 :(12 + 24): 300) / TR) + 1);\n    assert(isequal(sort(condInd).', 1:8))\n    % for each condition\n    for ci = 1 : nConds\n        % assemble stimulus onset and duration information in s\n        blockInd = find(condInd == ci);\n        blockStart = (blockInd - 1) * (12 + 24) + 12;\n        onsets{si, ci} = blockStart + (0 : 11) * (0.5 + 1.5);\n        durations{si, ci} = 0.5 * ones(1, 12);\n    end\nend\nnVolsPerSession = height(labels) / nSessions;\n\nVisualization of stimulus onsets in each session:\n\nfig = figure;\nfig.Position(3:4) = [750, 400];\ncolors = [\"#000000\", \"#ff9b00\", \"#a6ee00\", \"#00eea6\", ...\n    \"#009bff\", \"#a600ff\", \"#ff00a6\", \"#aaaaaa\"];\nfor ci = 1 : nConds\n    ons = [];\n    ses = [];\n    for si = 1 : nSessions\n        ons = [ons, onsets{si, ci}];\n        ses = [ses, si * ones(size(onsets{si, ci}))];\n    end\n    plot(ons, ses, '.', 'Color', colors(ci))\n    hold all\nend\nxlim([-1 , nVolsPerSession] * TR)\nylim([0.5, nSessions + 0.5])\nset(gca, 'YTick', 1 : nSessions)\nset(gca, 'YDir', 'reverse')\nylabel('session')\nxlabel('time / s')\nlegend(conditions, Location=\"eastoutside\")",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Preparation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/preparation.html#realign-bold-data",
    "href": "tutorial-fmri-spm/preparation.html#realign-bold-data",
    "title": "Preparation",
    "section": "Realign BOLD data",
    "text": "Realign BOLD data\n\nfnrBOLD = fullfile(sub, 'rbold.nii');\nmatlabbatch = {};\nfor si = 1 : nSessions\n    vi = (si - 1) * nVolsPerSession + (1 : nVolsPerSession);\n    vn = arrayfun(@(i) sprintf('%s,%d', fnBOLD, i), ...\n        vi, 'UniformOutput', false);\n    matlabbatch{1}.spm.spatial.realign.estwrite.data{si} = vn';\nend\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.quality = 0.9;\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.sep = 4;\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.fwhm = 5;\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.rtm = 1;\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.interp = 2;\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.wrap = [0 0 0];\nmatlabbatch{1}.spm.spatial.realign.estwrite.eoptions.weight = '';\nmatlabbatch{1}.spm.spatial.realign.estwrite.roptions.which = [2 1];\nmatlabbatch{1}.spm.spatial.realign.estwrite.roptions.interp = 4;\nmatlabbatch{1}.spm.spatial.realign.estwrite.roptions.wrap = [0 0 0];\nmatlabbatch{1}.spm.spatial.realign.estwrite.roptions.mask = 1;\nmatlabbatch{1}.spm.spatial.realign.estwrite.roptions.prefix = 'r';\nset(spm_figure('GetWin', 'Graphics'), 'Visible', 'off')\nspm_jobman('run', matlabbatch)\n\nInitialising batch system... done.\n\n\n------------------------------------------------------------------------\n28-Oct-2023 19:37:53 - Running job #1\n------------------------------------------------------------------------\n28-Oct-2023 19:37:53 - Running 'Realign: Estimate & Reslice'\n\nSPM12: spm_realign (v7141)                         19:37:53 - 28/10/2023\n========================================================================\nWarning: PostScript format 'psc2' will not be supported in a future release.\n&gt; In inputcheck\nIn print (line 41)\nIn spm_print (line 99)\nIn spm_realign&gt;plot_parameters (line 527)\nIn spm_realign (line 168)\nIn spm_run_realign (line 31)\nIn cfg_run_cm (line 29)\nIn cfg_util&gt;local_runcj (line 1717)\nIn cfg_util (line 972)\nIn spm_jobman&gt;fill_run_job (line 469)\nIn spm_jobman (line 247)\nPrinting 'Graphics' figure to:\n  /home/ca/work/Projects/CvCrossManova/cvcrossmanova/quarto-docs/tutorial-fmri-spm/spm_2023Oct28.ps\nCompleted                               :          19:42:36 - 28/10/2023\n\nSPM12: spm_reslice (v7141)                         19:42:36 - 28/10/2023\n========================================================================\nCompleted                               :          19:44:37 - 28/10/2023\n28-Oct-2023 19:44:37 - Done    'Realign: Estimate & Reslice'\n28-Oct-2023 19:44:37 - Done",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Preparation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/preparation.html#save-information",
    "href": "tutorial-fmri-spm/preparation.html#save-information",
    "title": "Preparation",
    "section": "Save information",
    "text": "Save information\n\nsave(fullfile(sub, 'info.mat'), 'regions', 'TR', 'nSessions', ...\n    'nVolsPerSession', 'conditions', 'nConds', 'onsets', 'durations', 'colors')",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Preparation"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvmanova.html",
    "href": "tutorial-fmri-spm/cvmanova.html",
    "title": "Cross-validated MANOVA",
    "section": "",
    "text": "% select subject\nsub = 'subj1';\n% load information\nload(fullfile(sub, 'info.mat'))\n% directory with estimated model\nmodelDir = fullfile(sub, 'model');",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvmanova.html#define-contrasts",
    "href": "tutorial-fmri-spm/cvmanova.html#define-contrasts",
    "title": "Cross-validated MANOVA",
    "section": "Define contrasts",
    "text": "Define contrasts\nWe are looking at two effects:\n\nthe ‘effect of stimulus’, i.e. quantifying how much patterns associated with the eight different stimuli differ from each other and\nthe ‘effect of category within inanimate object’, i.e. quantifying how much patterns associated with ‘bottle’, ‘scissors’, ‘shoe’, and ‘chair’ differ from each other.\n\nThe corresponding contrasts consist of 7 and 3 subcontrasts (columns), respectively, each of which targets the difference between two conditions.\n\nC_stimulus = ...\n    [  1  0  0  0  0  0  0      % face\n      -1  1  0  0  0  0  0      % house\n       0 -1  1  0  0  0  0      % cat\n       0  0 -1  1  0  0  0      % bottle\n       0  0  0 -1  1  0  0      % scissors\n       0  0  0  0 -1  1  0      % shoe\n       0  0  0  0  0 -1  1      % chair\n       0  0  0  0  0  0 -1 ];   % scrambledpix\nC_object_category = ...\n    [  0  0  0                  % face\n       0  0  0                  % house\n       0  0  0                  % cat\n       1  0  0                  % bottle\n      -1  1  0                  % scissors\n       0 -1  1                  % shoe\n       0  0 -1                  % chair\n       0  0  0 ];               % scrambledpix\n\nNote that though the subcontrasts only combine neighboring conditions, the null hypothesis defined by all of them together says that there is no difference in the patterns associated with any of the involved conditions. For example for C_object_category, the three subcontrasts state\n\npattern of ‘bottle’ = pattern of ‘scissors’,\npattern of ‘scissors’ = pattern of ‘shoe’, and\npattern of ‘shoe’ = pattern of ‘chair’.\n\nIf all three statements hold, that also implies that there is no difference e.g. between the pattern of ‘bottle’ and the pattern of ‘chair’. The result of cross-validated MANOVA, pattern distinctness D, estimates how much of the multivariate variance deviates from the null hypothesis encoded in a contrast.",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvmanova.html#define-analyses",
    "href": "tutorial-fmri-spm/cvmanova.html#define-analyses",
    "title": "Cross-validated MANOVA",
    "section": "Define analyses",
    "text": "Define analyses\nAn analysis is represented by an object of class Analysis. It comprises two contrasts, for ‘training’ (A) and ‘validation’ (B), but for cross-validated MANOVA the two are identical. It also defines a validation scheme which for each fold specifies which sessions are used for ‘training’ and ‘validation’. Here we use standard leave-one-session-out cross-validation, but more complex schemes can be defined.\n\nanalysis_stimulus = Analysis.leaveOneSessionOut(nSessions, C_stimulus)\n\nanalysis_stimulus = \n  Analysis:\n    12 fold(s), 12 session(s)\n    CA = CB:  8 × 7, 7-dimensional\n    no permutations (besides neutral)\n\n\n\nanalysis_object_category = Analysis.leaveOneSessionOut( ...\n    nSessions, C_object_category)\n\nanalysis_object_category = \n  Analysis:\n    12 fold(s), 12 session(s)\n    CA = CB:  8 × 3, 3-dimensional\n    no permutations (besides neutral)\n\n\nBy default no permutations are performed, but that can be requested explicitly. We here limit the number of permutations to 100, though a larger number is recommended if available.\n\nrng(1837146515, 'twister')\nanalysis_object_category.addPermutations(100)\n\n2048 permutations possible\nrandomly selecting a subset of 100 permutations\n\n\nIf the requested number of permutations (parameter maxPerms, default 1000) is larger than or equal to the number of possible permutations, all possible permutations are performed; if not, a subset is chosen randomly. For reproducibility of analyses it is advisable to explicitly initialize Matlab’s random number generator with rng. The arguments used here were originally chosen based on the fields Seed and Type from s = rng('shuffle').\nAs seen above, evaluating an Analysis object prints a brief summary. It can also be visualized using the method show:\n\nanalysis_object_category.show()\n\n\n\n\n\n\n\n\n\n\nBelow we need a cell array which contains all Analysis objects.\n\nanalyses = {analysis_stimulus, analysis_object_category};",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvmanova.html#run-analyses-on-regions-of-interest",
    "href": "tutorial-fmri-spm/cvmanova.html#run-analyses-on-regions-of-interest",
    "title": "Cross-validated MANOVA",
    "section": "Run analyses on regions of interest",
    "text": "Run analyses on regions of interest\nTo perform region-of-interest analyses, use the function cvCrossManovaRegion. It\n\nloads the data via the SPM.mat file in modelDir, restricted to the voxels in the regions specified via regions,\ncreates an object of class CvCrossManova which includes the data, design matrices, and the specified analyses,\nand then runs the analyses on the regions and returns the results.\n\nThe output first reports on loading the data and then displays the created CvCrossManova object, including information on the contained analyses.\n\n[Ds, ps] = cvCrossManovaRegion(modelDir, regions, analyses);\n\n\ncvCrossManovaRegion\n\nloading data via subj1/model/SPM.mat\n  27638 voxels within brain mask\n    572 voxels within brain mask in subj1/mask4_vt.nii\n    21 voxels within brain mask in subj1/mask8b_face_vt.nii\n    225 voxels within brain mask in subj1/mask8b_house_vt.nii\n  572 voxels within brain mask in all regions\n  reading images from subj1/rbold.nii,????\n  1452 of 1452 volumes loaded\n  whitening\n  high-pass-filtering\n  sum(fs) = 1452 - 48 - 180 = 1224   [SPM: trRV = 1224  erdf = 1224]\n\ncomputing Cross-validated (Cross-) MANOVA\n  CvCrossManova:\n    Data:\n      session     n      p     q      f \n         1       121    572    15    102\n         2       121    572    15    102\n         3       121    572    15    102\n         4       121    572    15    102\n         5       121    572    15    102\n         6       121    572    15    102\n         7       121    572    15    102\n         8       121    572    15    102\n         9       121    572    15    102\n        10       121    572    15    102\n        11       121    572    15    102\n        12       121    572    15    102\n    lambda: 1e-08\n    Analysis 1:\n      12 fold(s), 12 session(s)\n      CA = CB:  8 × 7, 7-dimensional\n      no permutations (besides neutral)\n    Analysis 2:\n      12 fold(s), 12 session(s)\n      CA = CB:  8 × 3, 3-dimensional\n      100 permutations (including neutral)\n\n\nThe result ps is an array with the number of voxels in each region.\n\nps\n\nps =\n   572    21   225\n\n\nThe result Ds is a cell array with one row for each analysis, and one column for each region. For the first analysis each cell contains a scalar, which is the estimated value of D.\n\nDs(1, :)\n\nans =\n  1x3 cell array\n    {[5.3228]}    {[0.36733]}    {[2.4592]}\n\n\n\n\nError using assert\nresult does not match expected [5.3228309400800411, 0.30012393047769736, 1.6930630901451187]\n\n\nFor the second analysis each cell contains an array with 100 elements, corresponding to the 100 permutations we requested. The first value is the actual estimated value of D, the others are permutation values.\n\nDs(2, :)\n\nans =\n  1x3 cell array\n    {1x100 double}    {1x100 double}    {1x100 double}\n\n\n\n\nError using assert\nresult does not match expected [1.2852740961380142, -0.018025507532779275, 0.58444270402859833]\n\n\nBased on this, we can calculate a p-value for the null hypothesis ‘no effect of category within inanimate object’, in each region.\n\nfor i = 1 : numel(regions)\n    D = Ds{2, i};\n    pval = mean(D &gt;= D(1));\n    fprintf('%-25s  D = %g, p = %g\\n', regions{i}, D(1), pval)\nend\n\nsubj1/mask4_vt.nii         D = 1.03085, p = 0.01\nsubj1/mask8b_face_vt.nii   D = 0.0219768, p = 0.05\nsubj1/mask8b_house_vt.nii  D = 0.371794, p = 0.01\n\n\nThe null hypothesis can be rejected in all three regions.",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvmanova.html#run-analyses-with-searchlight",
    "href": "tutorial-fmri-spm/cvmanova.html#run-analyses-with-searchlight",
    "title": "Cross-validated MANOVA",
    "section": "Run analyses with searchlight",
    "text": "Run analyses with searchlight\nTo perform searchlight analyses, use the function cvCrossManovaSearchlight. It\n\nloads the data via the SPM.mat file in modelDir,\ncreates an object of class CvCrossManova which includes the data, design matrices, and the specified analyses,\nand then runs the analyses on the voxels included in each searchlight.\n\nThe output first reports on loading the data and then displays the created CvCrossManova object, including information on the contained analyses.\n\nslRadius = 3;\ncvCrossManovaSearchlight(modelDir, slRadius, analyses)\n\n\ncvCrossManovaSearchlight\n\nloading data via subj1/model/SPM.mat\n  27638 voxels within brain mask\n  no region mask\n  reading images from subj1/rbold.nii,????\n  1452 of 1452 volumes loaded\n  whitening\n  high-pass-filtering\n  sum(fs) = 1452 - 48 - 180 = 1224   [SPM: trRV = 1224  erdf = 1224]\n\ncomputing Cross-validated (Cross-) MANOVA\n  CvCrossManova:\n    Data:\n      session     n       p      q      f \n         1       121    27638    15    102\n         2       121    27638    15    102\n         3       121    27638    15    102\n         4       121    27638    15    102\n         5       121    27638    15    102\n         6       121    27638    15    102\n         7       121    27638    15    102\n         8       121    27638    15    102\n         9       121    27638    15    102\n        10       121    27638    15    102\n        11       121    27638    15    102\n        12       121    27638    15    102\n    lambda: 1e-08\n    Analysis 1:\n      12 fold(s), 12 session(s)\n      CA = CB:  8 × 7, 7-dimensional\n      no permutations (besides neutral)\n    Analysis 2:\n      12 fold(s), 12 session(s)\n      CA = CB:  8 × 3, 3-dimensional\n      100 permutations (including neutral)\n  running searchlight of radius 3 (123 voxels)\n  intermediate results are saved to\n      subj1/model/ccmsCheckpointBC6DA7C1104F66DD455F0AA7B8512905.mat\n    42.6 min  27638 voxels  100.0 %\n\n\nResults are written to files in the model directory. ccmsParameters.mat is a record of the analysis parameters and VPSL.nii is an image file where each voxel contains the number of voxels of the searchlight centered on it.\n\ndir(modelDir)\n\n\n.                     spmD_A0002_P0029.nii  spmD_A0002_P0066.nii  \n..                    spmD_A0002_P0030.nii  spmD_A0002_P0067.nii  \nRPV.nii               spmD_A0002_P0031.nii  spmD_A0002_P0068.nii  \nResMS.nii             spmD_A0002_P0032.nii  spmD_A0002_P0069.nii  \nSPM.mat               spmD_A0002_P0033.nii  spmD_A0002_P0070.nii  \nVPSL.nii              spmD_A0002_P0034.nii  spmD_A0002_P0071.nii  \nccmsParameters.mat    spmD_A0002_P0035.nii  spmD_A0002_P0072.nii  \nmask.nii              spmD_A0002_P0036.nii  spmD_A0002_P0073.nii  \nspmD_A0001_P0001.nii  spmD_A0002_P0037.nii  spmD_A0002_P0074.nii  \nspmD_A0002_P0001.nii  spmD_A0002_P0038.nii  spmD_A0002_P0075.nii  \nspmD_A0002_P0002.nii  spmD_A0002_P0039.nii  spmD_A0002_P0076.nii  \nspmD_A0002_P0003.nii  spmD_A0002_P0040.nii  spmD_A0002_P0077.nii  \nspmD_A0002_P0004.nii  spmD_A0002_P0041.nii  spmD_A0002_P0078.nii  \nspmD_A0002_P0005.nii  spmD_A0002_P0042.nii  spmD_A0002_P0079.nii  \nspmD_A0002_P0006.nii  spmD_A0002_P0043.nii  spmD_A0002_P0080.nii  \nspmD_A0002_P0007.nii  spmD_A0002_P0044.nii  spmD_A0002_P0081.nii  \nspmD_A0002_P0008.nii  spmD_A0002_P0045.nii  spmD_A0002_P0082.nii  \nspmD_A0002_P0009.nii  spmD_A0002_P0046.nii  spmD_A0002_P0083.nii  \nspmD_A0002_P0010.nii  spmD_A0002_P0047.nii  spmD_A0002_P0084.nii  \nspmD_A0002_P0011.nii  spmD_A0002_P0048.nii  spmD_A0002_P0085.nii  \nspmD_A0002_P0012.nii  spmD_A0002_P0049.nii  spmD_A0002_P0086.nii  \nspmD_A0002_P0013.nii  spmD_A0002_P0050.nii  spmD_A0002_P0087.nii  \nspmD_A0002_P0014.nii  spmD_A0002_P0051.nii  spmD_A0002_P0088.nii  \nspmD_A0002_P0015.nii  spmD_A0002_P0052.nii  spmD_A0002_P0089.nii  \nspmD_A0002_P0016.nii  spmD_A0002_P0053.nii  spmD_A0002_P0090.nii  \nspmD_A0002_P0017.nii  spmD_A0002_P0054.nii  spmD_A0002_P0091.nii  \nspmD_A0002_P0018.nii  spmD_A0002_P0055.nii  spmD_A0002_P0092.nii  \nspmD_A0002_P0019.nii  spmD_A0002_P0056.nii  spmD_A0002_P0093.nii  \nspmD_A0002_P0020.nii  spmD_A0002_P0057.nii  spmD_A0002_P0094.nii  \nspmD_A0002_P0021.nii  spmD_A0002_P0058.nii  spmD_A0002_P0095.nii  \nspmD_A0002_P0022.nii  spmD_A0002_P0059.nii  spmD_A0002_P0096.nii  \nspmD_A0002_P0023.nii  spmD_A0002_P0060.nii  spmD_A0002_P0097.nii  \nspmD_A0002_P0024.nii  spmD_A0002_P0061.nii  spmD_A0002_P0098.nii  \nspmD_A0002_P0025.nii  spmD_A0002_P0062.nii  spmD_A0002_P0099.nii  \nspmD_A0002_P0026.nii  spmD_A0002_P0063.nii  spmD_A0002_P0100.nii  \nspmD_A0002_P0027.nii  spmD_A0002_P0064.nii  \nspmD_A0002_P0028.nii  spmD_A0002_P0065.nii  \n\n\n\nFiles with names of the form spmD_A####_P####.nii are images of pattern distinctness, i.e each voxel contains the estimated value of D from the voxels of the searchlight centered on it. The digits #### after A identify the analysis, and the digits after P the permutation (if no permutations were requested, only P0001 for the neutral permutation).\nWe visualize sagittal slices of spmD_A0001_P0001.nii, i.e. the actual pattern distinctness from the first analysis.\n\n% load data\nD = spm_read_vols(spm_vol(fullfile(modelDir, 'spmD_A0001_P0001.nii')));\n% plot data\nfig = figure();\n% color map: parula, but black for NaN\ncm = parula();\ncm(1, :) = 0;\ncolormap(cm)\n% color limits: rounded to 0.01 away from data range\ncl = [min(D(:)), max(D(:))];\ncl = ceil(cl .* [-1, 1] * 100) .* [-1, 1] / 100;\n% sagittal slices\nfig.Position(3:4) = [750, 1200];\ntiledlayout(8, 5, Padding=\"tight\", TileSpacing=\"tight\")\nfor i = 1 : size(D, 1)\n    nexttile\n    slice = squeeze(D(i, :, :)) .'; \n    imagesc(slice)\n    clim(cl)\n    axis off image xy\nend",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated MANOVA"
    ]
  },
  {
    "objectID": "tutorial-fmri-spm/cvcrossmanova.html",
    "href": "tutorial-fmri-spm/cvcrossmanova.html",
    "title": "Cross-validated Cross-MANOVA",
    "section": "",
    "text": "% select subject\nsub = 'subj1';\n% load information\nload(fullfile(sub, 'info.mat'))\n% directory with estimated model\nmodelDir = fullfile(sub, 'model');",
    "crumbs": [
      "Tutorial: fMRI with SPM",
      "Cross-validated Cross-MANOVA"
    ]
  }
]